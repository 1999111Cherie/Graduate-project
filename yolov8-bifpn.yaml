# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

#reference:https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v8/yolov8.yaml
#reference:About BIFPN moduel:https://blog.csdn.net/jisuaijicainiao/article/details/137468547?ops_request_misc=%257B%2522request%255Fid%2522%253A%252236D9E9B7-0275-40ED-86A9-701A75DEBAA9%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=36D9E9B7-0275-40ED-86A9-701A75DEBAA9&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-137468547-null-null.142^v100^pc_search_result_base9&utm_term=yolov8%E6%94%B9%E8%BF%9Bbifpn&spm=1018.2226.3001.4187
nc: 59  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.50, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0n head
head:
  - [4, 1, Conv, [128]]  # 10-P3/8
  - [6, 1, Conv, [256]]  # 11-P4/16
  - [9, 1, Conv, [512]]  # 12-P5/32

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 13 P5->P4
  - [[-1, 11], 1, BiFPN_Concat2, [1]] # 14
  - [-1, 3, C2f, [256]] # 15-P4/16
  
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 16 P4->P3
  - [[-1, 10], 1, BiFPN_Concat2, [1]] # 17
  - [-1, 3, C2f, [256]] # 18-P3/8

  - [2, 1, Conv, [256, 3, 2]] # 19 P2->P3
  - [[-1, 10, 18], 1, BiFPN_Concat3, [1]] # 20
  - [-1, 3, C2f, [256]] # 21-P3/8

  - [-1, 1, Conv, [256, 3, 2]] # 22 P3->P4
  - [[-1, 11, 15], 1, BiFPN_Concat3, [1]] # 23
  - [-1, 3, C2f, [512]] # 24-P4/16

  - [-1, 1, Conv, [256, 3, 2]] # 25 P4->P5
  - [[-1, 12], 1, BiFPN_Concat2, [1]] # 26
  - [-1, 3, C2f, [1024]] # 27-P5/32

  - [[21, 24, 27], 1, Segment, [nc, 32, 256]]  # Detect(P3, P4, P5)